{"version":3,"sources":["contracts/chainlink-ethprice.sol","Configure.js","utils.js","Shared.js","HDwallet.js","IPFS.js","OpenLaw.js","IDregistry.js","AuditLog.js","Chainlink.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Configure","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateLocalStorage","localStorage","setItem","consortiaId","current","value","appCredsUsername","appCredsPassword","nodeRpcEndpoint","hdwalletRpcEndpoint","hdwalletWalletId","ipfsRpcEndpoint","openlawRpcEndpoint","openlawAccountEmail","openlawAccountPassword","chainlinkLinkAddr","chainlinkOracleAddr","chainlinkApiEndpoint","alert","resetLocalStorage","clear","window","location","reload","React","createRef","getItem","_this2","react_default","a","createElement","className","style","maxWidth","maxHeight","src","process","type","ref","onClick","Component","utils","bindLocalStorage","t","idRegistryRpcEndpoint","buildWeb3","web3","priv","getNewWeb3","useWebsocket","arguments","length","undefined","getContract","contract","contractAddress","contractArgs","abi","JSON","parse","bytecode","ret","eth","Contract","deploy","data","err","console","error","buildServiceUrlWithCreds","serviceRpcEndpoint","prefix","startsWith","protocol","endpoint","replace","concat","Web3","providers","WebsocketProvider","MissingConfig","header","Link","to","text","supplemental","HDwallet","componentDidMount","blockExplorerUrl","endsWith","setState","msg","missingConfig","msgChanged","event","val","target","lockMsg","locked","fetchHdwallet","hdwalletAddress","hdwalletPrivateKey","fetchingHdwalletIndex","asyncToGenerator","regenerator_default","mark","_callee","hwa","wrap","_context","prev","next","hasHdwalletIndex","getHdwalletAccount","state","hdwalletIndex","sent","address","privateKey","stop","hdwalletIndexChanged","deployingContract","contractDeploying","deployContract","params","gas","contractJson","encodeABI","accounts","signTransaction","then","signed","sendSignedTransaction","rawTransaction","on","receipt","log","newInstance","contractFrom","from","transactionHash","getContractValue","methods","get","contractValue","hdwalletAccountIndex","headers","Headers","append","btoa","fetch","method","response","json","assertThisInitialized","Shared","disabled","onChange","rows","min","max","readOnly","href","substr","IPFS","fileChangedHandler","file","files","selectedFile","uploadToIpfs","uploadingFile","formData","FormData","body","r","ipfsLink","ipfsHash","Hash","uploadedFile","fileDescriptionChanged","fileDescription","getContractValues","contractFileDescription","contractIpfsHash","downloadFile","url","personal","getAccounts","theContract","deployObj","sendTransaction","_this3","fileRef","rel","convertUserObject","original","id","email","identifiers","identityProviderId","identifier","OpenLaw","openLawConfig","server","templateName","userName","password","apiClient","APIClient","root","auth","username","processNDA","_ref","ndaTemplate","partyAOLUser","partyBOLUser","ctResponse","executionResult","agreements","html","preventDefault","loading","login","getTemplate","getUserDetails","partyAEmail","partyBEmail","Openlaw","compileTemplate","content","isError","errorMessage","buildOpenLawParamsObj","execute","compiledTemplate","getAgreements","renderForReview","agreement","step1Active","step1Complete","step2Active","ndaPreviewText","t0","toString","_x","apply","uploadNDA","_ref2","_callee2","uploadParams","result","_context2","uploadContract","successMessage","ndaModalOpen","ndaAgreementId","_x2","userA","userB","templateId","title","creator","parameters","PartyA","partyA","PartyB","partyB","Length","ndaLength","PartyA Email","stringify","PartyA Officer","partyAOfficer","PartyA Officer Title","partyAOfficerTitle","PartyB Email","PartyB Officer","partyBOfficer","PartyB Officer Title","partyBOfficerTitle","overriddenParagraphs","readonlyEmails","editEmails","draftId","navigateToNda","_callee3","_context3","open","refreshPage","_callee4","_context4","formLoading","Container","Image","Header","as","attached","marginLeft","fontSize","Segment","Subheader","Step","Group","ordered","completed","active","Content","Title","Description","Form","success","onSubmit","Grid","columns","divided","Row","Message","Column","Input","label","placeholder","Field","inline","textAlign","Button","primary","size","dangerouslySetInnerHTML","__html","Modal","closeIcon","image","wrapped","default","IDregistry","fetchDirectory","fetchingDirectory","dir","directoryContractAddress","directory","AuditLog","getNumberOfRecords","modifyingContract","validMsg","isJSON","str","e","addMsg","addingMsg","push","send","resp","auditRecordCount","fetchRecord","index","fetchingRecord","viewJsonMessage","record","logEntries","viewRecordId","viewPrettyJson","payload","viewRecordEntityAddress","entityAddress","editingContract","showEditingContract","clearContract","removeItem","changeContractAddress","editContractAddress","editContractAddressChanged","editContractAddressValid","editContractPanel","contractExistsInLocalStorage","getSize","records","Number","parseInt","_loop","i","color","key","cursor","dist","iconColor","_this4","overflowY","borderRight","renderTimelines","backgroundColor","JSONPretty_default","Chainlink","contractSolidity","contractSolidityText","catch","setPriceHistoryCount","requestingEthPrice","requestEthPrice","viewingContract","showContractSource","showJobSpec","viewingJobSpec","ethPrices","viewBlockNumber","blockNumber","viewBlockTimestamp","Date","blockTimestamp","toLocaleString","viewEthPrice","reportedPrice","sampleJobId","sampleJobSpec","jobIdChanged","jobId","saveJobId","jobIdSaved","contractData","priceHistoryCount","chainlinkJobId","wsWeb3","requestEthereumPrice","once","getDataCount","c","marginTop","fontWeight","App","HashRouter","basename","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d5ccf41d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chainlink-ethprice.e3252272.sol\";","import React, { Component } from 'react';\nimport './App.css';\n// import { PrimaryButton } from '@photic/design-kit';\n\nclass Configure extends Component {\n  constructor(props) {\n    super(props)\n    this.consortiaId = React.createRef()\n    this.appCredsUsername = React.createRef()\n    this.appCredsPassword = React.createRef()\n    this.nodeRpcEndpoint = React.createRef()\n    this.hdwalletRpcEndpoint = React.createRef()\n    this.hdwalletWalletId = React.createRef()\n    this.ipfsRpcEndpoint = React.createRef()\n    this.openlawRpcEndpoint = React.createRef()\n    this.openlawAccountEmail = React.createRef()\n    this.openlawAccountPassword = React.createRef()\n    // this.idRegistryRpcEndpoint = React.createRef()\n    this.chainlinkLinkAddr = React.createRef()\n    this.chainlinkOracleAddr = React.createRef()\n    this.chainlinkApiEndpoint = React.createRef()\n  }\n\n  componentDidMount() {\n    this.consortiaId.current.value = localStorage.getItem('consortiaId');\n    this.appCredsUsername.current.value = localStorage.getItem('appCredsUsername');\n    this.appCredsPassword.current.value = localStorage.getItem('appCredsPassword');\n    this.nodeRpcEndpoint.current.value = localStorage.getItem('nodeRpcEndpoint');\n    this.hdwalletRpcEndpoint.current.value = localStorage.getItem('hdwalletRpcEndpoint');\n    this.hdwalletWalletId.current.value = localStorage.getItem('hdwalletWalletId');\n    this.ipfsRpcEndpoint.current.value = localStorage.getItem('ipfsRpcEndpoint');\n    this.openlawRpcEndpoint.current.value = localStorage.getItem('openlawRpcEndpoint');\n    this.openlawAccountEmail.current.value = localStorage.getItem('openlawAccountEmail');\n    this.openlawAccountPassword.current.value = localStorage.getItem('openlawAccountPassword');\n    // this.idRegistryRpcEndpoint.current.value = localStorage.getItem('idRegistryRpcEndpoint');\n    this.chainlinkLinkAddr.current.value = localStorage.getItem('chainlinkLinkAddr');\n    this.chainlinkOracleAddr.current.value = localStorage.getItem('chainlinkOracleAddr');\n    this.chainlinkApiEndpoint.current.value = localStorage.getItem('chainlinkApiEndpoint');\n  }\n\n  updateLocalStorage = () => {\n    localStorage.setItem('consortiaId', this.consortiaId.current.value);\n    localStorage.setItem('appCredsUsername', this.appCredsUsername.current.value);\n    localStorage.setItem('appCredsPassword', this.appCredsPassword.current.value);\n    localStorage.setItem('nodeRpcEndpoint', this.nodeRpcEndpoint.current.value);\n    localStorage.setItem('hdwalletRpcEndpoint', this.hdwalletRpcEndpoint.current.value);\n    localStorage.setItem('hdwalletWalletId', this.hdwalletWalletId.current.value);\n    localStorage.setItem('ipfsRpcEndpoint', this.ipfsRpcEndpoint.current.value);\n    localStorage.setItem('openlawRpcEndpoint', this.openlawRpcEndpoint.current.value);\n    localStorage.setItem('openlawAccountEmail', this.openlawAccountEmail.current.value);\n    localStorage.setItem('openlawAccountPassword', this.openlawAccountPassword.current.value);\n    // localStorage.setItem('idRegistryRpcEndpoint', this.idRegistryRpcEndpoint.current.value);\n    localStorage.setItem('chainlinkLinkAddr', this.chainlinkLinkAddr.current.value);\n    localStorage.setItem('chainlinkOracleAddr', this.chainlinkOracleAddr.current.value);\n    localStorage.setItem('chainlinkApiEndpoint', this.chainlinkApiEndpoint.current.value);\n    alert('latest settings saved!')\n  }\n\n  resetLocalStorage = () => {\n    localStorage.clear();\n    window.location.reload()\n  }\n\n  render() {\n    return (\n      <main className=\"container\">\n        <h2 className=\"pageHeader clearfix\">\n          <div className=\"headerImage\">\n            <img style={{maxWidth: '100%', maxHeight: '100%'}} \n                src={process.env.PUBLIC_URL + '/imgs/ethconnect.png'} />\n          </div>\n          <div className=\"headerText\">Configure</div>\n        </h2>\n        <h5>\n          Welcome to the Kaleido samples gallery! In order for the samples to connect to your \n          Kaleido environment, you will need to provide the configuration settings below.\n          All settings saved on this page will be persisted to browser local storage.\n        </h5>\n        <br />\n        <h5>Shared</h5>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-3 col-form-label\">App credentials username</label>\n          <div className=\"col-sm-4\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.appCredsUsername} />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-3 col-form-label\">App credentials password</label>\n          <div className=\"col-sm-6\">\n            <input type=\"password\" className=\"form-control col-sm-12\" ref={this.appCredsPassword} />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-3 col-form-label\">Node RPC endpoint</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.nodeRpcEndpoint} />\n            <small>(ex: https://zz..-zz..-rpc.us-east-2.kaleido.io)</small>\n          </div>\n        </div>\n        <h5>HDWallet</h5>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-3 col-form-label\">Consortia ID (for block explorer)</label>\n          <div className=\"col-sm-4\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.consortiaId} />\n            <small>(ex: zzabcd1234)</small>\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-3 col-form-label\">HDWallet API endpoint</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.hdwalletRpcEndpoint} />\n            <small>(ex: https://zz..-zz..-hdwallet.us-east-2.kaleido.io)</small>\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-3 col-form-label\">HDWallet wallet ID</label>\n          <div className=\"col-sm-4\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.hdwalletWalletId} />\n          </div>\n        </div>\n        <h5>IPFS</h5>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-3 col-form-label\">IPFS API endpoint</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.ipfsRpcEndpoint} />\n            <small>(ex: https://zz..-zz..-ipfs.us-east-2.kaleido.io/api)</small>\n          </div>\n        </div>\n        {/* <h5>ID Registry</h5>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">ID Registry RPC endpoint</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.idRegistryRpcEndpoint} />\n            <small>(ex: https://zz..-zz..-idregistry.us-east-2.kaleido.io)</small>\n          </div>\n        </div> */}\n        <h5>OpenLaw</h5>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-3 col-form-label\">OpenLaw UI URL</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.openlawRpcEndpoint} />\n            <small>(ex: https://zz..-zz..-openlaw.us-east-2.kaleido.io)</small>\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-3 col-form-label\">OpenLaw account email</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.openlawAccountEmail} />\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-3 col-form-label\">OpenLaw account password</label>\n          <div className=\"col-sm-6\">\n            <input type=\"password\" className=\"form-control col-sm-12\" ref={this.openlawAccountPassword} />\n          </div>\n        </div>\n        <h5>Chainlink</h5>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-3 col-form-label\">Chainlink API endpoint</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.chainlinkApiEndpoint} />\n            <small>(ex: https://zz..-zz..-chainlink.dev-svcs.photic.io)</small>\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-3 col-form-label\">Link Contract Address</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.chainlinkLinkAddr} />\n            <small>(ex: 0x145e7Aa18A4A5874c92eb177972173320F217c19)</small>\n          </div>\n        </div>        \n        <div className=\"form-group row\">\n          <label className=\"col-sm-3 col-form-label\">Oracle Contract Address</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.chainlinkOracleAddr} />\n            <small>(ex: 0xb4acb933676c0a76d9bb5f10791cb6d82c71f19d)</small>\n          </div>\n        </div>        \n        {/* <div className=\"form-group row\">\n          <label className=\"col-sm-3 col-form-label\">Chainlink username/email</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.chainlinkEmail} />\n            <small>(ex: 992ad8782cf38f7e@5e1be1892c901e94.com)</small>\n          </div>\n        </div>  \n        <div className=\"form-group row\">\n          <label className=\"col-sm-3 col-form-label\">Chainlink password</label>\n          <div className=\"col-sm-6\">\n            <input type=\"text\" className=\"form-control col-sm-12\" ref={this.chainlinkPassword} />\n            <small>(ex: 552d08dffd651499)</small>\n          </div>\n        </div>   */}\n        <div className=\"form-group row\">\n          <div className=\"col-sm-3\"></div>\n          <div className=\"col-sm-2\">\n            <button type=\"button\" className=\"btn btn-success\" onClick={() => this.updateLocalStorage()}>\n              Save\n            </button>\n          </div>\n          <div className=\"col-sm-2\">\n            <button type=\"button\" className=\"btn btn-sm btn-warning\" onClick={() => this.resetLocalStorage()}>\n              Reset all\n            </button>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default Configure;\n","import Web3 from 'web3'\n\nconst utils = {\n  bindLocalStorage(t) {\n    t.consortiaId = localStorage.getItem('consortiaId');\n    t.appCredsUsername = localStorage.getItem('appCredsUsername');\n    t.appCredsPassword = localStorage.getItem('appCredsPassword');\n    t.nodeRpcEndpoint = localStorage.getItem('nodeRpcEndpoint');\n    t.hdwalletRpcEndpoint = localStorage.getItem('hdwalletRpcEndpoint');\n    t.hdwalletWalletId = localStorage.getItem('hdwalletWalletId');\n    t.ipfsRpcEndpoint = localStorage.getItem('ipfsRpcEndpoint');\n    t.openlawRpcEndpoint = localStorage.getItem('openlawRpcEndpoint');\n    t.openlawAccountEmail = localStorage.getItem('openlawAccountEmail');\n    t.openlawAccountPassword = localStorage.getItem('openlawAccountPassword');\n    t.idRegistryRpcEndpoint = localStorage.getItem('idRegistryRpcEndpoint');\n    t.chainlinkLinkAddr = localStorage.getItem('chainlinkLinkAddr');\n    t.chainlinkOracleAddr = localStorage.getItem('chainlinkOracleAddr');\n    t.chainlinkApiEndpoint = localStorage.getItem('chainlinkApiEndpoint');\n  },\n\n  buildWeb3(t) {\n    if (t.appCredsUsername && t.appCredsPassword && t.nodeRpcEndpoint) {\n      t.web3 = priv.buildWeb3(t)\n    }\n  },\n\n  getNewWeb3(t, useWebsocket = false) {\n    if (t.appCredsUsername && t.appCredsPassword && t.nodeRpcEndpoint) {\n      return priv.buildWeb3(t, useWebsocket)\n    }\n  },\n\n  getContract(web3, contract, contractAddress, contractArgs) {\n    let abi = JSON.parse(contract.abi);\n    let bytecode = '0x' + contract.bytecode;\n    try {\n      let ret = new web3.eth.Contract(abi, contractAddress);\n      if (!contractAddress) {\n        // this is a new deployment, build the deploy object\n        ret = ret.deploy({\n          data: bytecode,\n          arguments: contractArgs\n        });\n      }\n      return ret;\n    } catch(err) {\n      console.error('Failed to get contract', err)\n    }\n    return null;\n  },\n\n  buildServiceUrlWithCreds(t, serviceRpcEndpoint, useWebsocket = false) {\n    let prefix = serviceRpcEndpoint.startsWith('http://') ? 'http://' : 'https://'\n    let protocol = useWebsocket ? \"wss://\" : prefix\n    let endpoint = serviceRpcEndpoint.replace(prefix, '')\n    if (useWebsocket) endpoint = endpoint.replace('-rpc.', '-wss.')\n    return `${protocol}${t.appCredsUsername}:${t.appCredsPassword}@${endpoint}`\n  }\n}\n\nconst priv = {\n  buildWeb3(t, useWebsocket = false) {\n    if (useWebsocket) {\n      return new Web3(new Web3.providers.WebsocketProvider(utils.buildServiceUrlWithCreds(t, t.nodeRpcEndpoint, useWebsocket)))  \n    }\n    return new Web3(utils.buildServiceUrlWithCreds(t, t.nodeRpcEndpoint, useWebsocket))\n  }\n}\n\nexport default utils ","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\n\nfunction MissingConfig(props) {\n  return (\n    <main>\n      <div className=\"container\">\n        <h2>{props.header}</h2>\n        missing&nbsp;\n        <Link to=\"/\">\n          config\n        </Link>\n        <br /><br />\n        <p>{props.text}</p>\n        <br />\n        <div>{props.supplemental}</div>\n        <br />\n      </div>\n    </main>\n  )\n}\n\nexport default MissingConfig;\n","import React, { Component } from 'react';\nimport contractJson from './contracts/hdwallet.json'\n// import { sha256 } from 'js-sha256'\nimport utils from './utils'\nimport MissingConfig from './Shared'\nimport './App.css';\n\nclass HDwallet extends Component {\n  constructor(props) {\n    super(props)\n    utils.bindLocalStorage(this)\n    utils.buildWeb3(this)\n    this.state = { \n      missingConfig: false,    \n      msg: '',\n      locked: false,\n      hdwalletAddress: '',\n      hdwalletPrivateKey: '',\n      hdwalletIndex: '',\n      fetchingHdwalletIndex: false,\n      contractDeploying: false,\n      contractAddress: '',\n      contractFrom: '',\n      contractValue: '',\n      transactionHash: ''\n    }\n  }\n\n  componentDidMount = () => {\n    if (!this.consortiaId || !this.appCredsUsername || !this.appCredsPassword || \n      !this.nodeRpcEndpoint || !this.hdwalletRpcEndpoint || !this.hdwalletWalletId) {\n      this.setState(() => ({\n        missingConfig: true\n      }))\n      return\n    }\n    this.blockExplorerUrl = this.nodeRpcEndpoint.endsWith('dev.photic.io') ? 'explorer-dev.photic.io' : 'explorer.kaleido.io'\n    this.setState(() => ({\n      msg: \"Sample message\"\n    }))\n  }\n\n  msgChanged = (event) => {\n    const val = event.target.value\n    this.setState(() => ({\n      msg: val\n    }));\n  };\n\n  lockMsg = () => {\n    this.setState(() => ({\n      locked: true\n    }));\n  };\n\n  fetchHdwallet = () => {\n    this.setState(() => ({\n      hdwalletAddress: '',\n      hdwalletPrivateKey: '',\n      fetchingHdwalletIndex: true\n    }), async () => {\n      if (this.hasHdwalletIndex()) {\n        let hwa = await this.getHdwalletAccount(this.state.hdwalletIndex)\n        this.setState(() => ({\n          hdwalletAddress: hwa.address,\n          hdwalletPrivateKey: hwa.privateKey,\n          fetchingHdwalletIndex: false\n        }));\n      }\n    });\n  }\n\n  hasHdwalletIndex = () => {\n    return this.state.hdwalletIndex && this.state.hdwalletIndex >= 0\n  }\n\n  hdwalletIndexChanged = (event) => {\n    const val = event.target.value\n    this.setState(() => ({\n      hdwalletIndex: val\n    }));\n  };\n  \n  deployingContract = () => {\n    this.setState(() => ({\n      contractDeploying: true\n    }), () => this.deployContract());\n  }\n\n  deployContract = () => {\n    let theContract = utils.getContract(this.web3, contractJson, '', [this.state.msg]);\n    let deployObj = theContract.encodeABI();\n    let params = {\n      gas: 500000000,\n      data: deployObj\n    };\n    this.web3.eth.accounts.signTransaction(params, `0x${this.state.hdwalletPrivateKey}`).then((signed) => {\n      this.web3.eth.sendSignedTransaction(signed.rawTransaction)\n        .on('receipt', (receipt) => {\n          console.log(receipt);\n        })\n        .on('error', (err) => {\n          console.error('Failed to deploy the smart contract. Error: ' + err);\n        })\n        .then((newInstance) => {\n          console.log(newInstance)\n          console.log(`\\tSmart contract deployed, ready to take calls at '${newInstance.contractAddress}'`);\n          this.setState(() => ({\n            contractAddress: newInstance.contractAddress,\n            contractFrom: newInstance.from,\n            transactionHash: newInstance.transactionHash\n          }));\n        });\n    });\n  }\n\n  getContractValue = () => {\n    let theContract = utils.getContract(this.web3, contractJson, this.state.contractAddress, []);\n    theContract.methods.get().call().then((value) => {\n      console.log('\\tSmart contract current state: %j', value);\n      this.setState(() => ({\n        contractValue: value\n      }));\n    });\n  }\n\n  getHdwalletAccount = (hdwalletAccountIndex) => {\n    console.log('fetching hd wallet account to use')\n    const headers = new Headers();\n    headers.append('Authorization', 'Basic ' + btoa(this.appCredsUsername + ':' + this.appCredsPassword));\n    headers.append('content-type', 'application/json')\n    headers.append('Accept', 'application/json, text/plain, */*',)\n    return fetch(`${this.hdwalletRpcEndpoint}/api/v1/wallets/${this.hdwalletWalletId}/accounts/${hdwalletAccountIndex}`, {\n      method: 'GET',\n      headers: headers\n    }).then(response => response.json())\n  }\n\n  render() {\n    if (this.state.missingConfig) {\n      return (\n        <MissingConfig header=\"HDWallet\" />\n      )\n    }\n    return (\n      <main className=\"container\">\n        <h2 className=\"pageHeader clearfix\">\n          <div className=\"headerImage\">\n            <img style={{maxWidth: '100%', maxHeight: '100%'}} \n                src={process.env.PUBLIC_URL + '/imgs/hdwallet.png'} />\n          </div>\n          <div className=\"headerText\">HDWallet</div>\n        </h2>\n        <h5>\n          The purpose of this sample is to show how you can anonymously submit a transaction to the blockchain. We will deploy a \n          simple smart contract which stores and exposes a single value. \n        </h5>\n        <br />\n        <h6>\n          Step 1: Enter a message. This message is the value that will be included in the smart contract when we deploy it in the next step.\n        </h6>\n        <div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">Message</label>\n            <div className=\"col-sm-7\">\n              <textarea disabled={this.state.locked} onChange={this.msgChanged} \n                        className=\"form-control\"\n                        rows=\"2\" value = {this.state.msg} />\n            </div>\n            { !this.state.locked ?\n            <div className=\"col-sm-3\">\n              <button disabled={!this.state.msg} \n                      type=\"button\" className=\"btn btn-primary\" onClick={() => this.lockMsg()}>\n                Next\n              </button>\n            </div> : null }\n          </div>\n          { this.state.locked ? \n            <div>\n              <h6>\n                Step 2: Let's choose an account generated by your HDWallet to sign the transaction that deploys \n                our contract containing the above message.\n              </h6>\n              <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">HDWallet account index</label>\n                <div className=\"col-sm-2\">\n                  <input type=\"number\" min=\"0\" max=\"10000\" className=\"form-control col-sm-12\" \n                         disabled={this.state.contractDeploying}\n                         value={this.state.hdwalletIndex} onChange={this.hdwalletIndexChanged}></input>\n                </div>\n                { !this.state.contractDeploying ? \n                <div className=\"col-sm-3\">\n                  <button disabled={this.state.fetchingHdwalletIndex || !this.hasHdwalletIndex()} type=\"button\" \n                          className=\"btn btn-primary\" onClick={() => this.fetchHdwallet()}>\n                    Fetch HDWallet account\n                  </button>\n                </div> : null }\n              </div>\n              <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">HDWallet address</label>\n                <div className=\"col-sm-7\">\n                  <input type=\"text\" className=\"form-control col-sm-12\" readOnly={true} value={this.state.hdwalletAddress}></input>\n                </div>\n              </div>\n              <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">HDWallet signing key</label>\n                <div className=\"col-sm-7\">\n                  <input type=\"text\" className=\"form-control col-sm-12\" readOnly={true} value={this.state.hdwalletPrivateKey}></input>\n                </div>\n                { !this.state.contractDeploying && this.state.hdwalletAddress && this.state.hdwalletPrivateKey ? \n                <div className=\"col-sm-3\">\n                  <button type=\"button\" className=\"btn btn-success\" onClick={() => this.deployingContract()}>\n                    Deploy to blockchain!\n                  </button>\n                </div> : null }\n                { this.state.contractDeploying && !this.state.contractAddress ?\n                <div className=\"col-sm-3\">\n                  <button type=\"button\" disabled={true} className=\"btn btn-success\">\n                    Deploying to blockchain...\n                  </button>\n                </div>\n                : null}\n              </div>\n            </div> : null }\n            { this.state.contractAddress ? \n            <div>\n              <h6>\n                Step 3: Congrats!\n                <br />\n                The contract has been deployed to the following address: <i>{this.state.contractAddress}</i>.\n                <br />\n                On the blockchain ledger, this\n                <a target='blank' href={`https://${this.blockExplorerUrl}/tx/${this.state.transactionHash}?consortia=${this.consortiaId}&environment=${this.nodeRpcEndpoint.substr(8, 10)}`}> transaction </a> \n                shows that it originated from <i>{this.state.contractFrom}</i>. \n                Notice that this is the account you chose to use from your HDWallet and <b>not</b> your Kaleido node's account address. \n                For future transactions, you can sequentially iterate through the wallet accounts and obtain a different signing key for every transaction.\n                For complete anonymity you should never use a signing key more than once. \n              </h6>\n              <br />\n              <h6>Step 4: Verification - lets query the contract's value</h6>\n              <div className=\"form-group row\">\n                <label className=\"col-sm-2 col-form-label\">Contract value</label>\n                <div className=\"col-sm-7\">\n                  <input type=\"text\" className=\"form-control col-sm-12\" readOnly={true} value={this.state.contractValue}></input>\n                </div>\n                {!this.state.contractValue ?\n                <div className=\"col-sm-3\">\n                  <button type=\"button\" className=\"btn btn-primary\" \n                          onClick={() => this.getContractValue()}>\n                    Get contract value\n                  </button>\n                </div> : null }\n              </div>\n              {this.state.contractValue ? \n              <h6>\n                Conclusion: Notice that the value stored in the blockchain contract matches your message above.\n              </h6> : null }\n            </div> : null }\n          </div>  \n      </main>\n    );\n  }\n}\n\nexport default HDwallet;\n","import React, { Component } from 'react';\nimport contractJson from './contracts/ipfs.json'\nimport utils from './utils'\nimport MissingConfig from './Shared'\nimport './App.css';\n\nclass IPFS extends Component {\n  constructor(props) {\n    super(props)\n    utils.bindLocalStorage(this)\n    utils.buildWeb3(this)\n    this.state = {     \n      missingConfig: false,\n      selectedFile: null,\n      uploadingFile: false,\n      uploadedFile: false,\n      ipfsHash: '',\n      ipfsLink: '',\n      fileDescription: '',\n      contractDeploying: false,\n      contractAddress: '',\n      contractFileDescription: '',\n      contractIpfsHash: ''\n    }\n  }\n\n  componentDidMount = () => {\n    if (!this.appCredsUsername || !this.appCredsPassword || !this.nodeRpcEndpoint || !this.ipfsRpcEndpoint) {\n      this.setState(() => ({\n        missingConfig: true\n      }))\n    }\n  }\n\n  fileChangedHandler = (event) => {\n    const file = event.target.files[0]\n    if (!file) {\n      this.setState(() => ({\n        selectedFile: null\n      }))\n    } else {\n      this.setState(() => ({\n        selectedFile: file\n      }))  \n    }\n  }\n\n  uploadToIpfs = () => {\n    this.setState(() => ({\n      uploadingFile: true\n    }), () => {\n      const headers = new Headers();\n      headers.append('Authorization', 'Basic ' + btoa(this.appCredsUsername + ':' + this.appCredsPassword));\n      headers.append('Accept', 'application/json, text/plain, */*',)  \n      const formData = new FormData()\n      formData.append('blob', this.state.selectedFile)\n      fetch(`${this.ipfsRpcEndpoint}/v0/add`, {\n        method: 'POST',\n        headers: headers,\n        body: formData\n      })\n      .then(r => r.json())\n      .then(data => {\n        console.log(data)\n        let ipfsLink = utils.buildServiceUrlWithCreds(this, `${this.ipfsRpcEndpoint}/v0`)\n        this.setState(() => ({\n          ipfsHash: data.Hash,\n          ipfsLink: `${ipfsLink}/cat/${data.Hash}`,\n          uploadedFile: true,\n          uploadingFile: false\n        })) \n      })\n    }) \n  }\n\n  fileDescriptionChanged = (event) => {\n    const val = event.target.value\n    this.setState(() => ({\n      fileDescription: val\n    })) \n  }\n\n  deployingContract = () => {\n    this.setState(() => ({\n      contractDeploying: true\n    }), () => this.deployContract());\n  }\n\n  async deployContract() {\n    let accounts = await this.web3.eth.personal.getAccounts();\n    let theContract = utils.getContract(this.web3, contractJson, '', [this.state.fileDescription, this.state.ipfsHash])\n    let deployObj = theContract.encodeABI();\n    let params = {\n      from: accounts[0],\n      gas: 500000000,\n      data: deployObj\n    };\n    this.web3.eth.sendTransaction(params)\n      .on('receipt', (receipt) => {\n        console.log(receipt);\n      })\n      .on('error', (err) => {\n        console.error('Failed to deploy the smart contract. Error: ' + err);\n      })\n      .then((newInstance) => {\n        console.log(newInstance)\n        console.log(`\\tSmart contract deployed, ready to take calls at '${newInstance.contractAddress}'`);\n        this.setState(() => ({\n          contractAddress: newInstance.contractAddress\n        }));\n      });\n  }\n\n  getContractValues = () => {\n    let theContract = utils.getContract(this.web3, contractJson, this.state.contractAddress, []);\n    theContract.methods.get().call().then((data) => {\n      console.log('\\tSmart contract current state: %j', data);\n      this.setState(() => ({\n        contractFileDescription: data['0'],\n        contractIpfsHash: data['1']\n      }));\n    });\n  }\n\n  downloadFile = () => {\n    var headers = new Headers();\n    headers.append('Authorization', 'Basic ' + btoa(this.appCredsUsername + ':' + this.appCredsPassword));\n    headers.append('Accept', 'application/json, text/plain, */*',)\n    let url = `${this.ipfsRpcEndpoint}/v0/get/${this.state.ipfsHash}`\n    fetch(url, {\n      method: 'GET',\n      headers: headers\n    })\n  }\n\n  render() {\n    if (this.state.missingConfig) {\n      return (\n        <MissingConfig header=\"IPFS\" />\n      )\n    }\n    return (\n      <main className=\"container\">\n        <h2 className=\"pageHeader clearfix\">\n          <div className=\"headerImage\">\n            <img style={{maxWidth: '100%', maxHeight: '100%'}} \n                src={process.env.PUBLIC_URL + '/imgs/ipfs.png'} />\n          </div>\n          <div className=\"headerText\">IPFS</div>\n        </h2>\n        <h5>\n          The purpose of this sample is to show how you can add a file to IPFS, and then store a \n          description of the file along with the IPFS content hash in a blockchain smart contract. \n          This is a popular pattern for storing large amounts of data off-chain (in IPFS) and storing the \n          reference (IPFS content hash) of where the data is located on-chain.\n        </h5>\n        <br />\n        <h6>\n          Step 1: Add a file to IPFS and retrieve the IPFS hash back once it's been added.\n        </h6>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">Upload a file</label>\n          <div className=\"col-sm-5\">\n            <input disabled={this.state.uploadedFile} type=\"file\" \n                   onChange={this.fileChangedHandler}\n                   ref={this.fileRef} />\n          </div>\n          { !this.state.uploadedFile ?\n          <div className=\"col-sm-5\">\n            <button disabled={!this.state.selectedFile || this.state.uploadingFile} type=\"button\" className=\"btn btn-primary\" \n                    onClick={() => this.uploadToIpfs()}>\n              Upload file\n            </button>\n          </div> : null }\n        </div>\n\n        { this.state.uploadedFile ? \n        <div>\n          <h6>\n            Step 2: The file has been added to IPFS with the following content hash: <i>{this.state.ipfsHash}</i>.\n            <br /> Enter a friendly file description for this file and then we can deploy the smart contract containing\n            the description and IPFS content hash.\n          </h6>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">File description</label>\n            <div className=\"col-sm-7\">\n              <input type=\"text\" className=\"form-control col-sm-12\" readOnly={this.state.contractDeploying}\n                     onChange={this.fileDescriptionChanged} value={this.state.fileDescription} />\n            </div>\n            { !this.state.contractDeploying ? \n            <div className=\"col-sm-3\">\n              <button disabled={!this.state.fileDescription} type=\"button\" className=\"btn btn-success\" \n                      onClick={() => this.deployingContract()}>\n                Deploy to blockchain!\n              </button>\n            </div> : null }\n            { this.state.contractDeploying && !this.state.contractAddress ?\n            <div className=\"col-sm-3\">\n              <button type=\"button\" disabled={true} className=\"btn btn-success\">\n                Deploying to blockchain...\n              </button>\n            </div>\n            : null }\n          </div>\n        </div> : null }\n\n        { this.state.contractAddress ? \n        <div>\n          <h6>\n            Step 3: Congrats!\n            <br />\n            The contract has been deployed to the following address: <i>{this.state.contractAddress}</i>.\n          </h6>\n          <br />\n          <h6>Step 4: Verification - lets query the contract's values</h6>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">File description</label>\n            <div className=\"col-sm-7\">\n              <input type=\"text\" className=\"form-control col-sm-12\" readOnly={true} value={this.state.contractFileDescription}></input>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">IPFS content hash</label>\n            <div className=\"col-sm-7\">\n              <input type=\"text\" className=\"form-control col-sm-12\" readOnly={true} value={this.state.contractIpfsHash}></input>\n            </div>\n            {!this.state.contractFileDescription && !this.state.contractIpfsHash ?\n            <div className=\"col-sm-3\">\n              <button type=\"button\" className=\"btn btn-primary\" \n                      onClick={() => this.getContractValues()}>\n                Get contract values\n              </button>\n            </div> : null }\n          </div>\n        </div> : null }\n\n        { this.state.contractFileDescription && this.state.contractIpfsHash ?\n        <div>\n          <h6>Conclusion: Download file from IPFS using the IPFS content hash</h6>\n          <div className=\"col-sm-3\">\n            <a href={this.state.ipfsLink}          \n               target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-primary\">\n              Download file\n            </a>\n          </div>\n        </div> : null }\n      </main>\n    );\n  }\n}\n\nexport default IPFS;\n","import React, { Component } from 'react';\nimport { Container, Image, Input, Message, Modal, Button, Form, Grid, Header, Segment, Step } from 'semantic-ui-react';\nimport './App.css';\nimport { APIClient, Openlaw } from 'openlaw';\nimport utils from './utils'\nimport MissingConfig from './Shared'\n\nclass OpenLaw extends Component {\n  constructor(props) {\n    super(props)\n    utils.bindLocalStorage(this)\n    \n    this.state = {\n      missingConfig: false,\n      formLoading: false,\n      errorMessage: \"\",\n      successMessage: \"\",\n      step1Complete: false,\n      step1Active: true,\n      step2Active: false,\n      partyA: \"\",\n      partyAOfficer: \"\",\n      partyAOfficerTitle: \"\",\n      partyAEmail: \"\",\n      partyB: \"\",\n      partyBOfficer: \"\",\n      partyBOfficerTitle: \"\",\n      partyBEmail: \"\",\n      ndaLength: \"\",\n      ndaPreviewText: \"\",\n      ndaModalOpen: false,\n      ndaAgreementId: \"\"\n    };\n  }\n\n  componentDidMount = () => {\n    if (!this.appCredsUsername || !this.appCredsPassword || !this.openlawRpcEndpoint ||\n        !this.openlawAccountEmail || !this.openlawAccountPassword) {\n      this.setState(() => ({\n        missingConfig: true\n      }))\n      return\n    }\n\n    this.openLawConfig = {\n      server: utils.buildServiceUrlWithCreds(this, this.openlawRpcEndpoint),\n      templateName: 'NDA DEMO (KALEIDO)',\n      userName: this.openlawAccountEmail,\n      password: this.openlawAccountPassword\n    }\n\n    this.apiClient = new APIClient({\n      root: this.openlawRpcEndpoint,\n      auth: {\n        username: this.appCredsUsername,\n        password: this.appCredsPassword\n      }\n    });\n  }\n\n  processNDA = async(event) => {\n    event.preventDefault();\n    this.setState({loading: true});\n    try {\n      this.apiClient.login(this.openLawConfig.userName, this.openLawConfig.password);\n\n      const ndaTemplate = await this.apiClient.getTemplate(this.openLawConfig.templateName);\n      console.log(ndaTemplate);\n\n      const partyAOLUser = await this.apiClient.getUserDetails(this.state.partyAEmail);\n      console.log(\"partyAOLUser\", partyAOLUser);\n      const partyBOLUser = await this.apiClient.getUserDetails(this.state.partyBEmail);\n      console.log(\"ndaTemplate\", ndaTemplate);\n\n      const ctResponse = Openlaw.compileTemplate(ndaTemplate.content);\n      if (ctResponse.isError) {\n        throw \"Template error: \" + ctResponse.errorMessage;\n      }\n      console.log(\"ctResponse\", ctResponse);\n\n      const params = this.buildOpenLawParamsObj(ndaTemplate, partyAOLUser, partyBOLUser);\n      const executionResult = Openlaw.execute(ctResponse.compiledTemplate, {}, params);\n      const agreements = Openlaw.getAgreements(executionResult.executionResult);\n\n      const html = Openlaw.renderForReview(agreements[0].agreement, {});\n      console.log(\"html\", html);\n\n      this.setState({step1Active: false, step1Complete: true, step2Active: true, ndaPreviewText: html});\n\n    } catch (e) {\n      this.setState({errorMessage: e.toString()});\n      console.log(\"exception caught\", e);\n    }\n    this.setState({loading: false});\n  }\n\n  uploadNDA = async(event) => {\n    event.preventDefault();\n    this.setState({loading: true});\n    try {\n      this.apiClient.login(this.openLawConfig.userName, this.openLawConfig.password);\n\n      const ndaTemplate = await this.apiClient.getTemplate(this.openLawConfig.templateName);\n      const partyAOLUser = await this.apiClient.getUserDetails(this.state.partyAEmail);\n      console.log(\"partyAOLUser\", partyAOLUser);\n      const partyBOLUser = await this.apiClient.getUserDetails(this.state.partyBEmail);\n      console.log(\"ndaTemplate\", ndaTemplate);\n\n      const uploadParams = this.buildOpenLawParamsObj(ndaTemplate, partyAOLUser, partyBOLUser);\n      console.log(\"uploadParams\", uploadParams);\n\n      const result = await this.apiClient.uploadContract(uploadParams);\n      console.log(result);\n\n      this.setState({successMessage: \"processed\", step1Active: false, step1Complete: true});\n      this.setState({ndaModalOpen: true, ndaAgreementId: result});\n\n    } catch (e) {\n      this.setState({errorMessage: e.toString()});\n      console.log(\"exception caught\", e);\n    }\n    this.setState({loading: false});\n  }\n\n  buildOpenLawParamsObj = function(ndaTemplate, userA, userB) {\n    const object = {\n      templateId: ndaTemplate.id,\n      title: this.openLawConfig.templateName,\n      text: ndaTemplate.content,\n      creator: userA.id,\n      parameters: {\n        \"PartyA\": this.state.partyA,\n        \"PartyB\": this.state.partyB,\n        \"Length\": this.state.ndaLength,\n        \"PartyA Email\": JSON.stringify(convertUserObject(userA)),\n        \"PartyA Officer\": this.state.partyAOfficer,\n        \"PartyA Officer Title\": this.state.partyAOfficerTitle,\n        \"PartyB Email\": JSON.stringify(convertUserObject(userB)),\n        \"PartyB Officer\": this.state.partyBOfficer,\n        \"PartyB Officer Title\": this.state.partyBOfficerTitle\n      },\n      overriddenParagraphs: {},\n      agreements: {},\n      readonlyEmails: [],\n      editEmails: [],\n      draftId: \"\"\n    };\n    return object;\n  };\n\n  navigateToNda = async() => {\n    window.open(this.openLawConfig.server + \"/contract/\" + this.state.ndaAgreementId, '_blank')\n  }\n\n  refreshPage = async() => {\n    window.location.reload()\n  }\n\n  render() {\n    if (this.state.missingConfig) {\n      return (\n        <MissingConfig header=\"OpenLaw\" text=\"be sure to configure the OpenLaw RPC endpoint along with a valid Openlaw account email & password\" />\n      )\n    }\n\n    return (\n      <main>\n        <Container>\n          <h2 className=\"pageHeader clearfix\">\n            <div className=\"headerImage\">\n              <img style={{maxWidth: '100%', maxHeight: '100%'}} \n                  src={process.env.PUBLIC_URL + '/imgs/openlaw.jpg'} />\n            </div>\n            <div className=\"headerText\">Openlaw</div>\n          </h2>\n          <Image src={process.env.PUBLIC_URL + '/imgs/top-image.png'} />\n          <Header as='h1' attached='top'>\n            Create New Joint Venture Project \n            <a target='blank' href=\"https://github.com/kaleido-io/kaleido-samples-gallery/tree/master/docs/openlaw\" \n              style={{marginLeft: '50px', fontSize: 'small'}}>view instructions\n            </a>\n          </Header>\n          <Segment attached>\n            <Header.Subheader>New land development, farm exploration, or other joint venture projects</Header.Subheader>\n            <Step.Group ordered>\n              <Step completed={this.state.step1Complete} active={this.state.step1Active}>\n                <Step.Content>\n                  <Step.Title>Parties</Step.Title>\n                  <Step.Description>Project members</Step.Description>\n                </Step.Content>\n              </Step>\n              <Step active={this.state.step2Active}>\n                <Step.Content>\n                  <Step.Title>Non Disclosure</Step.Title>\n                  <Step.Description>On OpenLaw</Step.Description>\n                  </Step.Content>\n              </Step>\n              <Step>\n                <Step.Content>\n                  <Step.Title>Scope Project</Step.Title>\n                  <Step.Description>Success criteria</Step.Description>\n                </Step.Content>\n              </Step>\n              <Step>\n                <Step.Content>\n                  <Step.Title>Budget</Step.Title>\n                </Step.Content>\n              </Step>\n              <Step>\n                <Step.Content>\n                  <Step.Title>Finalize</Step.Title>\n                  <Step.Description>On OpenLaw</Step.Description>\n                </Step.Content>\n              </Step>\n            </Step.Group>\n            {this.state.step1Active &&\n              <Segment>\n                <Form loading={this.state.formLoading} error={!!this.state.errorMessage}\n                  success={!!this.state.successMessage} onSubmit={this.processNDA}>\n                  <Grid columns={2} divided>\n                    <Grid.Row columns={1}>\n                      <Message error header='Error' content={this.state.errorMessage} />\n                      <Message success header='Success' content={this.state.successMessage} />\n                    </Grid.Row>\n                    <Grid.Row style={{marginLeft:'0px'}}>\n                      <Grid.Column>\n                        <Header as=\"h4\">First Participant</Header>\n                          <Form.Input label=\"Company Name\"\n                            type=\"text\" placeholder=\"Corporate name\"\n                            onChange={event => this.setState({partyA: event.target.value})} />\n                          <Form.Input label=\"Officer\"\n                            type=\"text\" placeholder=\"First and last name\"\n                            onChange={event => this.setState({partyAOfficer: event.target.value})} />\n                          <Form.Input label=\"Title\"\n                            type=\"text\" placeholder=\"Officer's title (e.g., COO)\"\n                            onChange={event => this.setState({partyAOfficerTitle: event.target.value})} />\n                          <Form.Input label=\"Email\"\n                            type=\"text\" placeholder=\"Email address where signature form should be sent\"\n                            onChange={event => this.setState({partyAEmail: event.target.value})} />\n                      </Grid.Column>\n                      <Grid.Column>\n                        <Header as=\"h4\">Second Participant</Header>\n                          <Form.Input label=\"Company Name\"\n                            type=\"text\" placeholder=\"Corporate name\"\n                            onChange={event => this.setState({partyB: event.target.value})} />\n                          <Form.Input label=\"Officer\"\n                            type=\"text\" placeholder=\"First and last name\"\n                            onChange={event => this.setState({partyBOfficer: event.target.value})} />\n                          <Form.Input label=\"Title\"\n                            type=\"text\" placeholder=\"Officer's title (e.g., COO)\"\n                            onChange={event => this.setState({partyBOfficerTitle: event.target.value})} />\n                          <Form.Input label=\"Email\"\n                            type=\"text\" placeholder=\"Email address where signature form should be sent\"\n                            onChange={event => this.setState({partyBEmail: event.target.value})} />\n                      </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row columns={1} style={{marginLeft:'0px'}}>\n                      <Grid.Column>\n                        <Form.Field inline>\n                          <label>How long do you want the non-disclosure agreement (\"NDA\") to continue after disclosures?</label>\n                          <Input placeholder='years' onChange={event => this.setState({ndaLength: event.target.value})} />\n                        </Form.Field>\n                      </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row columns={1}>\n                      <Grid.Column textAlign=\"right\">\n                        <Button type={\"submit\"} primary>Go To Non-Disclosure Agreeement</Button>\n                      </Grid.Column>\n                    </Grid.Row>\n                  </Grid>\n                </Form>\n              </Segment>\n            }\n            {this.state.step2Active &&\n              <Segment>\n                <Header>Preview</Header>\n                <Form onSubmit={this.uploadNDA} loading={this.state.formLoading} error={!!this.state.errorMessage}\n                  success={!!this.state.successMessage}>\n                  <Grid>\n                    <Grid.Row columns={1}>\n                      <Grid.Column textAlign=\"right\">\n                        <Button primary size=\"large\">Begin Signature Process</Button>\n                      </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row columns={1}>\n                      <Grid.Column>\n                        <div className=\"ndaPreview\" dangerouslySetInnerHTML={{__html: this.state.ndaPreviewText}} />\n                      </Grid.Column>\n                      <Grid.Column>&nbsp;</Grid.Column>\n                    </Grid.Row>\n                  </Grid>\n                </Form>\n                <Modal open={this.state.ndaModalOpen} closeIcon>\n                  <Modal.Header>Non-Disclosure Agreement</Modal.Header>\n                  <Modal.Content image >\n                    <Image src={process.env.PUBLIC_URL + '/imgs/openlaw-300.png'} wrapped size=\"small\" />\n                    <Modal.Description>\n                      <p>You will now be redirected to OpenLaw where both parties will execute the NDA. Evidence of the agreement\n                        will be stored on the blockchain.</p>\n                      <Button primary onClick={this.navigateToNda}>Sign NDA On OpenLaw</Button>\n                      <Button style={{marginLeft: '50px'}} default onClick={this.refreshPage}>close & conclude demo</Button>\n                    </Modal.Description>\n                  </Modal.Content>\n                </Modal>\n              </Segment>\n            }\n            <Segment>\n              <p>Agriculture Network is a demonstration project by <strong><a href=\"http://openlaw.io\">OpenLaw </a></strong>\n                and <strong><a href=\"https://kaleido.io\">Kaleido</a></strong>.</p>\n            </Segment>\n          </Segment>\n        </Container>\n      </main>\n    );\n  }\n\n};\n\nfunction convertUserObject(original) {\n  const object = {\n    id: {\n      id: original.id\n    },\n    email: original.email,\n    identifiers: [\n      {\n        identityProviderId: \"openlaw\",\n        identifier: original.identifiers[0].id\n      }\n    ]\n  }\n  return object;\n}\n\nexport default OpenLaw;\n","import React, { Component } from 'react';\nimport utils from './utils'\nimport MissingConfig from './Shared'\nimport './App.css';\n\nclass IDregistry extends Component {\n  constructor(props) {\n    super(props)\n    utils.bindLocalStorage(this)\n    utils.buildWeb3(this)\n    this.state = {     \n      missingConfig: false,\n      fetchingDirectory: false,\n      directoryContractAddress: ''\n    }\n  }\n\n  componentDidMount = () => {\n    if (!this.appCredsUsername || !this.appCredsPassword || !this.nodeRpcEndpoint || !this.idRegistryRpcEndpoint) {\n      this.setState(() => ({\n        missingConfig: true\n      }))\n    }\n  }\n\n  fetchDirectory = () => {\n    this.setState(() => ({\n      fetchingDirectory: true\n    }), () => {\n      var headers = new Headers();\n      headers.append('Authorization', 'Basic ' + btoa(this.appCredsUsername + ':' + this.appCredsPassword));\n      headers.append('Accept', 'application/json, text/plain, */*',)\n      let url = `${this.idRegistryRpcEndpoint}/api/v1/directories`\n      fetch(url, {\n        method: 'GET',\n        headers: headers\n      }).then(response => response.json())\n      .then(response => {\n        let dir = response[0]\n        this.setState(() => ({\n          directoryContractAddress: dir.directory\n        }))\n      })\n    })\n  }\n\n  render() {\n    if (this.state.missingConfig) {\n      return (\n        <MissingConfig header=\"ID Registry\" />\n      )\n    }\n    return (\n      <main className=\"container\">\n        <h2>ID Registry</h2>\n        <h5>\n          The purpose of this sample is to show how you can use Kaleido's ID Registry service to create an organization and\n          add users to that organization.\n        </h5>\n        <br />    \n        { !this.state.directoryContractAddress ? \n        <div>\n          <h6>\n            Fetch directory contract address from ID Registry service\n          </h6>\n          <div className=\"col-sm-5\">\n            <button disabled={this.state.fetchingDirectory} type=\"button\" className=\"btn btn-primary\" \n                    onClick={() => this.fetchDirectory()}>\n              Get contract address\n            </button>\n          </div> \n        </div> : \n        \n        <div>\n          <h6>\n            The directories contract has been deployed to the following address: <i>{this.state.directoryContractAddress}</i>.\n          </h6>\n          <h6>\n            Next up: let's bind your verified organizational identity (i.e. the validated x509 cert) with an Ethereum account and establish an on-chain organizational identity\n          </h6>\n        </div>\n        }\n\n      </main>\n    );\n  }\n}\n\nexport default IDregistry;\n","import React, { Component } from 'react';\nimport contractJson from './contracts/auditlog.json'\nimport utils from './utils'\nimport { Timeline, TimelineBlip } from 'react-event-timeline'\nimport JSONPretty from 'react-json-pretty';\nimport MissingConfig from './Shared'\nimport './App.css';\n\nclass AuditLog extends Component {\n  constructor(props) {\n    super(props)\n    utils.bindLocalStorage(this)\n    utils.buildWeb3(this)\n    this.state = {\n      missingConfig: false,\n      contractExistsInLocalStorage: localStorage.getItem('auditLogContractAddress') ? true : false,\n      contractAddress: localStorage.getItem('auditLogContractAddress'),\n      validMsg: false,\n      msg: '',\n      addingMsg: false,\n      auditRecordCount: 0,\n      viewRecordId: 0,\n      viewRecordEntityAddress: '',\n      viewPrettyJson: '',\n      viewJsonMessage: 'click record on left to view transaction details',\n      showEditingContract: false,\n      editContractAddress: '',\n      editContractAddressValid: false,\n      modifyingContract: false\n    }\n  }\n\n  componentDidMount = () => {\n    if (!this.appCredsUsername || !this.appCredsPassword || !this.nodeRpcEndpoint) {\n      this.setState(() => ({\n        missingConfig: true\n      }))\n      return\n    }\n    if (this.state.contractAddress) {\n      this.getNumberOfRecords()\n    }\n  }\n\n  deployingContract = () => {\n    this.setState(() => ({\n      modifyingContract: true\n    }), () => this.deployContract());\n  }\n\n  async getNumberOfRecords() {\n    let theContract = utils.getContract(this.web3, contractJson, this.state.contractAddress, []);\n    let records = await theContract.methods.getSize().call()\n    this.setState(() => ({\n      auditRecordCount: Number.parseInt(records)\n    }))\n  }\n\n  async deployContract() {\n    let accounts = await this.web3.eth.personal.getAccounts();\n    let theContract = utils.getContract(this.web3, contractJson, '', [])\n    let deployObj = theContract.encodeABI();\n    let params = {\n      from: accounts[0],\n      gas: 500000000,\n      data: deployObj\n    };\n    this.web3.eth.sendTransaction(params)\n      .on('receipt', (receipt) => {\n        console.log(receipt);\n      })\n      .on('error', (err) => {\n        console.error('Failed to deploy the smart contract. Error: ' + err);\n      })\n      .then((newInstance) => {\n        console.log(newInstance)\n        console.log(`\\tSmart contract deployed, ready to take calls at '${newInstance.contractAddress}'`);\n        this.setState(() => ({\n          contractAddress: newInstance.contractAddress,\n          contractExistsInLocalStorage: true,\n          modifyingContract: false\n        }), () => localStorage.setItem('auditLogContractAddress', newInstance.contractAddress));\n      });\n  }\n\n  msgChanged = (event) => {\n    const val = event.target.value\n    this.setState(() => ({\n      msg: val,\n      validMsg: this.isJSON(val)\n    }));\n  };\n\n  isJSON = (str) => {\n    if( typeof( str ) !== 'string' ) { \n      return false;\n    }\n    try {\n      JSON.parse(str);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  addMsg = () => {\n    this.setState(() => ({\n      addingMsg: true\n    }), async () => {\n      let theContract = utils.getContract(this.web3, contractJson, this.state.contractAddress, [])\n      let accounts = await this.web3.eth.personal.getAccounts();\n      let params = {\n        from: accounts[0],\n        gas: 5000000\n      };\n      await theContract.methods.push(accounts[0], this.state.msg).send(params)\n        .on('error', (err) => {\n          console.error('Failed to call the smart contract. Error: ' + err);\n        })\n        .then((resp) => {\n          console.log(resp)\n          this.setState(() => ({\n            msg: '',\n            addingMsg: false,\n            validMsg: false,\n            auditRecordCount: this.state.auditRecordCount + 1\n          }), () => this.fetchRecord(this.state.auditRecordCount - 1));\n        });\n    });\n  };\n\n  renderTimelines() {\n    let records = [], max = 100\n    for (let i = this.state.auditRecordCount - 1; i >= 0 && max > 0; i--, max--) {\n      let color = i % 2 === 0 ? \"#03CC79\" : \"#3942C1\"\n      records.push(\n        <div key={i+1} style={{cursor: 'pointer'}} onClick={() => this.fetchRecord(i)}>\n          <TimelineBlip title={`#${i+1}`} iconColor={color}/>\n        </div>)\n    }\n    return records;\n  }\n\n  fetchRecord = (index) => {\n    this.setState(() => ({\n      fetchingRecord: true,\n      viewJsonMessage: `Fetching record #${index+1}...`\n    }), async () => {\n      let theContract = utils.getContract(this.web3, contractJson, this.state.contractAddress, []);\n      let record = await theContract.methods.logEntries(index).call()\n      this.setState(() => ({\n        viewRecordId: index+1,\n        viewPrettyJson: record.payload,\n        viewRecordEntityAddress: record.entityAddress,\n        fetchingRecord: false\n      }));\n    });\n  }\n\n  editingContract = () => {\n    this.setState(() => ({\n      showEditingContract: !this.state.showEditingContract\n    }));\n  }\n\n  clearContract = () => {\n    this.setState(() => ({\n      modifyingContract: true\n    }), () => {\n      localStorage.removeItem('auditLogContractAddress')\n      window.location.reload()\n    });\n  }\n\n  changeContractAddress = () => {\n    this.setState(() => ({\n      modifyingContract: true\n    }), () => {\n      let theContract = utils.getContract(this.web3, contractJson, this.state.editContractAddress, []);\n      if (!theContract) {\n        alert(\"invalid contract address\")\n        this.setState(() => ({\n          modifyingContract: false\n        }))\n      }\n      localStorage.setItem('auditLogContractAddress', this.state.editContractAddress)\n      window.location.reload()\n    });\n  }\n\n  editContractAddressChanged = (event) => {\n    const val = event.target.value\n    this.setState(() => ({\n      editContractAddress: val,\n      editContractAddressValid: val.startsWith('0x') && val.length === 42\n    }));\n  };\n\n  editContractPanel = () => {\n    return (\n      <div>        \n        <div className=\"col-sm-12\">\n          <button className=\"btn btn-sm btn-link\" onClick={() => this.editingContract()}>load a previously deployed contract</button>\n        </div>\n        { this.state.showEditingContract ?\n        <div>\n          <small className=\"col-sm-12\">\n            load a previously deployed contract, or, clear the above loaded contract from local storage so you can start over and deploy a brand new one\n          </small>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">Audit log contract address</label>\n            <div className=\"col-sm-5\">\n              <input disabled={this.state.modifyingContract} type=\"text\" className=\"form-control\" onChange={this.editContractAddressChanged} />\n            </div>\n            <div className=\"col-sm-5\">\n              <button disabled={!this.state.editContractAddressValid || this.state.modifyingContract} type=\"button\" className=\"btn btn-sm btn-primary\" \n                      onClick={() => this.changeContractAddress()}>\n                load contract\n              </button>\n              { this.state.contractExistsInLocalStorage ? <small style={{marginLeft: '15px'}}>or</small> : null }\n              { this.state.contractExistsInLocalStorage ? \n                <button style={{marginLeft: '15px'}} type=\"button\" className=\"btn btn-sm btn-warning\" disabled={this.state.modifyingContract}\n                        onClick={() => this.clearContract()}>\n                  clear current contract\n                </button> : null }\n            </div>\n          </div>\n        </div>  : null }\n      </div>\n    )\n  }\n\n  render() {\n    if (this.state.missingConfig) {\n      return (\n        <MissingConfig header=\"Audit Log\" />\n      )\n    }\n    const timelinePanel = {\n      overflowY: 'scroll',\n      maxHeight: '500px',\n      borderRight: '1px solid rgba(0,0,0,.1)',\n    }\n    return (\n      <main className=\"container\">\n        <h2 className=\"pageHeader clearfix\">\n          <div className=\"headerImage\">\n            <img style={{maxWidth: '100%', maxHeight: '100%'}} \n                src={process.env.PUBLIC_URL + '/imgs/blockexplorer.png'} />\n          </div>\n          <div className=\"headerText\">Audit Log</div>\n        </h2>\n        <h5>\n          The purpose of this sample is to show how you can use a simple smart contract as an audit log to view records\n          as they're submitted over time.\n        </h5>\n        <br />\n        { !this.state.contractExistsInLocalStorage ? \n        <div>\n          <h6>\n            Step 1: Deploy a new audit log contract to track log records going forward, or, specify a previously deployed audit log contract\n          </h6>\n          <div className=\"col-sm-3\">\n            <button type=\"button\" className=\"btn btn-success\" \n                    disabled={ this.state.modifyingContract }\n                    onClick={() => this.deployingContract()}>\n              { this.state.modifyingContract ? \"Deploying to blockchain...\" : \"Deploy to blockchain!\" }\n            </button>\n          </div>\n          <small>or</small>\n          {this.editContractPanel()}\n        </div> : null }\n        { this.state.contractAddress ? \n        <div>\n          <h6>\n            The audit log smart contract has been deployed to the following address: \n            <i> {this.state.contractAddress}</i>.\n            <br />\n            {this.editContractPanel()}\n          </h6>\n          <br />\n          <h6>Add new log record by calling a function on the smart contract</h6>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">JSON payload</label>\n            <div className=\"col-sm-7\">\n              <textarea disabled={this.state.addingMsg} onChange={this.msgChanged} \n                        className=\"form-control\"\n                        rows=\"3\" value = {this.state.msg} />\n            </div>\n            <div className=\"col-sm-3\">\n              <button disabled={this.state.addingMsg || !this.state.validMsg} \n                      type=\"button\" className=\"btn btn-primary\" onClick={() => this.addMsg()}>\n                {this.state.addingMsg ? \"Adding...\" : \"Add\"}\n              </button>\n              {this.state.msg && !this.state.validMsg ? \" invalid json \" : \"\"}\n            </div>\n          </div>\n          {this.state.auditRecordCount > 0 ?\n          <div>\n            <hr />\n            <h6>Audit log history (most recent records appear at top)</h6>\n            <br />\n            <div className=\"row col-sm-12\">\n              <div style={timelinePanel} className=\"col-sm-3\">\n                <Timeline>\n                  {this.renderTimelines()}\n                </Timeline>\n              </div>\n              <div className=\"col-sm-8\">\n                { !this.state.fetchingRecord && this.state.viewRecordId > 0 ?\n                <div>\n                  <div className=\"form-group row\">\n                    <label className=\"col-sm-2 col-form-label\">Record #</label>\n                    <div className=\"col-sm-10\">\n                      <input type=\"text\" readOnly={true} className=\"form-control-plaintext\" value={this.state.viewRecordId}></input>\n                    </div>\n                  </div>\n                  <div className=\"form-group row\">\n                    <label className=\"col-sm-2 col-form-label\">Entity address</label>\n                    <div className=\"col-sm-10\">\n                      <input type=\"text\" readOnly={true} className=\"form-control-plaintext\" value={this.state.viewRecordEntityAddress}></input>\n                    </div>\n                  </div>\n                  <div className=\"form-group row\">\n                    <label className=\"col-sm-2 col-form-label\">Payload</label>\n                    <div className=\"col-sm-10\">\n                      <pre style={{backgroundColor:'#F3F2F2'}}>\n                        <JSONPretty style={{marginLeft:'15px'}} id=\"json-pretty\" json={this.state.viewPrettyJson} className=\"form-control-plaintext\"></JSONPretty>\n                      </pre>\n                    </div>\n                  </div> \n                </div> : \n                <div>\n                  { this.state.viewJsonMessage }\n                </div> }\n              </div>\n            </div>\n          </div> : null }\n        </div> : null }\n      </main>\n    );\n  }\n}\n\nexport default AuditLog;\n","import React, { Component } from 'react';\nimport sampleJobSpec from './contracts/Chainlink_sample_spec.json'\nimport contractJson from './contracts/chainlink-ethprice.json'\nimport contractSolidity from './contracts/chainlink-ethprice.sol'\nimport utils from './utils'\nimport { Timeline, TimelineBlip } from 'react-event-timeline'\nimport MissingConfig from './Shared'\nimport './App.css';\nimport JSONPretty from 'react-json-pretty';\n\nclass Chainlink extends Component {\n  constructor(props) {\n    super(props)\n    utils.bindLocalStorage(this)\n    utils.buildWeb3(this)\n    this.state = {\n      missingConfig: false,\n      contractExistsInLocalStorage: localStorage.getItem('chainlinkContractAddress') ? true : false,\n      contractAddress: localStorage.getItem('chainlinkContractAddress'),\n      showEditingContract: false,\n      editContractAddress: '',\n      editContractAddressValid: false,\n      modifyingContract: false,\n      showContractSource: false,\n      showJobSpec: false,\n      contractSolidityText: '',\n      requestingEthPrice: false,\n      contractData: [],\n      priceHistoryCount: 0,\n      fetchingRecord: false,\n      viewJsonMessage: 'click record on left to view price details',\n      viewRecordId: 0,\n      viewBlockNumber: '',\n      viewBlockTimestamp: '',\n      viewEthPrice: '',\n      jobId: '',\n      jobIdSaved: false\n    }\n  }\n\n  componentDidMount = () => {\n    if (!this.appCredsUsername || !this.appCredsPassword || !this.nodeRpcEndpoint ||\n        !this.chainlinkApiEndpoint || !this.chainlinkLinkAddr || !this.chainlinkOracleAddr) {\n      this.setState(() => ({\n        missingConfig: true\n      }))\n      return\n    }\n\n    fetch(contractSolidity).then(resp => resp.text()).then(text => this.setState({\n        contractSolidityText: text\n    })).catch(err => console.err('Failed to load Solidity source', err));\n\n    if (this.state.contractAddress) {\n      this.setPriceHistoryCount()\n    }\n  }\n\n  deployingContract = () => {\n    this.setState(() => ({\n      modifyingContract: true\n    }), () => this.deployContract());\n  }\n\n  requestingEthPrice = () => {\n    this.setState(() => ({\n        requestingEthPrice: true\n    }), () => this.requestEthPrice());\n  }\n\n  async deployContract() {\n    let chainlinkJobId = this.state.jobId\n    if (!chainlinkJobId.startsWith('0x')) chainlinkJobId = '0x' + chainlinkJobId;\n    if (!this.chainlinkLinkAddr.startsWith('0x')) this.chainlinkLinkAddr = '0x' + this.chainlinkLinkAddr;\n    if (!this.chainlinkOracleAddr.startsWith('0x')) this.chainlinkOracleAddr = '0x' + this.chainlinkOracleAddr;\n    let accounts = await this.web3.eth.personal.getAccounts();\n    let theContract = utils.getContract(this.web3, contractJson, '', [\n      chainlinkJobId, this.chainlinkLinkAddr, this.chainlinkOracleAddr\n    ])\n    let deployObj = theContract.encodeABI();\n    let params = {\n      from: accounts[0],\n      gas: 500000000,\n      data: deployObj\n    };\n    this.web3.eth.sendTransaction(params)\n      .on('receipt', (receipt) => {\n        console.log(receipt);\n      })\n      .on('error', (err) => {\n        console.error('Failed to deploy the smart contract. Error: ' + err);\n      })\n      .then((newInstance) => {\n        console.log(newInstance)\n        console.log(`\\tSmart contract deployed, ready to take calls at '${newInstance.contractAddress}'`);\n        this.setState(() => ({\n          contractAddress: newInstance.contractAddress,\n          contractExistsInLocalStorage: true,\n          modifyingContract: false\n        }), () => localStorage.setItem('chainlinkContractAddress', newInstance.contractAddress));\n      });\n  }\n\n  async requestEthPrice() {\n    let wsWeb3 = utils.getNewWeb3(this, true)\n    let theContract = utils.getContract(wsWeb3, contractJson, this.state.contractAddress, []);\n    let accounts = await wsWeb3.eth.personal.getAccounts();\n    let params = {\n      from: accounts[0],\n      gas: 5000000\n    };\n    let t = this\n    await theContract.methods.requestEthereumPrice(\"USD\").send(params)\n    theContract.once('RequestEthereumPriceFulfilled', function(error, event){ \n      if (error) { \n        console.error('RequestEthereumPriceFulfilled failed', error)\n        return\n      }\n      console.log('RequestEthereumPriceFulfilled happened', event); \n      t.setState(() => ({\n        requestingEthPrice: false,\n        priceHistoryCount: t.state.priceHistoryCount + 1\n      }), () => t.fetchRecord(t.state.priceHistoryCount - 1));\n    });\n  }\n\n  async setPriceHistoryCount() {\n    let theContract = utils.getContract(this.web3, contractJson, this.state.contractAddress, []);\n    let c = await theContract.methods.getDataCount().call()\n    this.setState(() => ({\n      priceHistoryCount: Number.parseInt(c)\n    }));\n  }\n\n  editingContract = () => {\n    this.setState(() => ({\n      showEditingContract: !this.state.showEditingContract\n    }));\n  }\n\n  viewingContract = () => {\n    this.setState(() => ({\n      showContractSource: !this.state.showContractSource,\n      showJobSpec: false\n    }));\n  }\n\n  viewingJobSpec = () => {\n    this.setState(() => ({\n      showJobSpec: !this.state.showJobSpec,\n      showContractSource: false\n    }));\n  }\n\n  renderTimelines() {\n    let records = [], max = 100\n    for (let i = this.state.priceHistoryCount - 1; i >= 0 && max > 0; i--, max--) {\n      let color = i % 2 === 0 ? \"#03CC79\" : \"#3942C1\"\n      records.push(\n        <div key={i+1} style={{cursor: 'pointer'}} onClick={() => this.fetchRecord(i)}>\n          <TimelineBlip title={`#${i+1}`} iconColor={color}/>\n        </div>)\n    }\n    return records;\n  }\n\n  fetchRecord = (index) => {\n    this.setState(() => ({\n      fetchingRecord: true,\n      viewJsonMessage: `Fetching record #${index+1}...`\n    }), async () => {\n      let theContract = utils.getContract(this.web3, contractJson, this.state.contractAddress, []);\n      let record = await theContract.methods.ethPrices(index).call()\n      this.setState(() => ({\n        viewRecordId: index+1,\n        viewBlockNumber: record.blockNumber,\n        viewBlockTimestamp: new Date(record.blockTimestamp * 1000).toLocaleString(),\n        viewEthPrice: record.reportedPrice / 100,\n        fetchingRecord: false\n      }));\n    });\n  }\n\n  clearContract = () => {\n    this.setState(() => ({\n      modifyingContract: true\n    }), () => {\n      localStorage.removeItem('chainlinkContractAddress')\n      window.location.reload()\n    });\n  }\n\n  changeContractAddress = () => {\n    this.setState(() => ({\n      modifyingContract: true\n    }), () => {\n      let theContract = utils.getContract(this.web3, contractJson, this.state.editContractAddress, []);\n      if (!theContract) {\n        alert(\"invalid contract address\")\n        this.setState(() => ({\n          modifyingContract: false\n        }))\n      }\n      localStorage.setItem('chainlinkContractAddress', this.state.editContractAddress)\n      window.location.reload()\n    });\n  }\n\n  editContractAddressChanged = (event) => {\n    const val = event.target.value\n    this.setState(() => ({\n      editContractAddress: val,\n      editContractAddressValid: val.startsWith('0x') && val.length === 42\n    }));\n  };\n\n  editContractPanel = () => {\n    return (\n      <div>        \n        <div className=\"col-sm-12\">\n          <button className=\"btn btn-sm btn-link\" onClick={() => this.editingContract()}>load a previously deployed contract</button>\n        </div>\n        { this.state.showEditingContract ?\n        <div>\n          <small className=\"col-sm-12\">\n            load a previously deployed contract, or, clear the above loaded contract from local storage so you can start over and deploy a brand new one\n          </small>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">Chainlink contract address</label>\n            <div className=\"col-sm-5\">\n              <input disabled={this.state.modifyingContract} type=\"text\" className=\"form-control\" onChange={this.editContractAddressChanged} />\n            </div>\n            <div className=\"col-sm-5\">\n              <button disabled={!this.state.editContractAddressValid || this.state.modifyingContract} type=\"button\" className=\"btn btn-sm btn-primary\" \n                      onClick={() => this.changeContractAddress()}>\n                load contract\n              </button>\n              { this.state.contractExistsInLocalStorage ? <small style={{marginLeft: '15px'}}>or</small> : null }\n              { this.state.contractExistsInLocalStorage ? \n                <button style={{marginLeft: '15px'}} type=\"button\" className=\"btn btn-sm btn-warning\" disabled={this.state.modifyingContract}\n                        onClick={() => this.clearContract()}>\n                  clear current contract\n                </button> : null }\n            </div>\n          </div>\n        </div>  : null }\n      </div>\n    )\n  }\n\n  sampleJobId = () => {\n    return (\n      <pre style={{backgroundColor:'#F3F2F2'}}>\n        <JSONPretty style={{marginLeft:'15px'}} id=\"json-pretty\" json={sampleJobSpec} className=\"form-control-plaintext\"></JSONPretty>\n      </pre>\n    )\n  }\n\n  jobIdChanged = (event) => {\n    const val = event.target.value\n    this.setState(() => ({\n      jobId: val\n    }));\n  }\n\n  saveJobId = () => {\n    this.setState(() => ({\n      jobIdSaved: true\n    }));\n  }\n\n  render() {\n    if (this.state.missingConfig) {\n      return (\n        <MissingConfig \n          header=\"Chainlink\"\n          text=\"you can retrieve the values for CHAINLINK API ENDPOINT, LINK_CONTRACT_ADDRESS & ORACLE_CONTRACT_ADDRESS\n          from the Chainlink service dashboard where you launch the Chainlink Web UI\"\n        />\n      )\n    }\n    const timelinePanel = {\n      overflowY: 'scroll',\n      maxHeight: '500px',\n      borderRight: '1px solid rgba(0,0,0,.1)',\n    }\n    return (\n      <main className=\"container\">\n        <h2 className=\"pageHeader clearfix\">\n          <div className=\"headerImage\">\n            <img style={{maxWidth: '100%', maxHeight: '100%'}} \n                 src={process.env.PUBLIC_URL + '/imgs/chainlink.png'} />\n          </div>\n          <div className=\"headerText\">Chainlink</div>\n        </h2>\n        <h5>\n          This sample deploys and exercises the following example Chainlink contract,\n          which queries the current price of Ether via the Chainlink Oracle\n          service and stores the results on your private Kaleido chain.\n        </h5>\n        <div className=\"col-sm-12\">\n          <button className=\"btn btn-sm btn-link\" onClick={() => this.viewingContract()}>view contract source</button>\n          <button style={{marginLeft: '25px'}} className=\"btn btn-sm btn-link\" onClick={() => this.viewingJobSpec()}>view sample chainlink job spec</button>\n        </div>\n        \n        { this.state.showContractSource ?\n        <pre style={{backgroundColor:'#F3F2F2'}}><code className='solidity'>\n            <div style={{marginLeft:'15px'}}>{this.state.contractSolidityText}</div>\n        </code></pre>\n        : null }\n        { this.state.showJobSpec ?\n          this.sampleJobId()\n        : null }\n        <br />\n        \n        { !this.state.contractExistsInLocalStorage ? \n        <div>\n          <h6>\n            Step 1: Login to the <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.chainlinkApiEndpoint + '/jobs/new'}>Chainlink dashboard </a> \n            to create a job spec by copying the exact sample chainlink job spec json provided above (or retrieve an already created job spec id). \n            Once created, enter the job spec's JOB ID below as that will be needed for us to deploy the smart contract in the next step\n          </h6>\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">Chainlink JOB ID</label>\n            <div className=\"col-sm-5\">\n              <input type=\"text\" onChange={this.jobIdChanged} disabled={this.state.jobIdSaved}\n                     className=\"form-control\"\n                     value = {this.state.jobId} />\n            </div>\n            <div className=\"col-sm-3\">\n              <button disabled={!this.state.jobId || this.state.jobIdSaved}\n                      type=\"button\" className=\"btn btn-primary\" onClick={() => this.saveJobId()}>\n                Next\n              </button>\n            </div>\n          </div>\n          {this.state.jobIdSaved ?\n          <div>\n            <h6>\n              Step 2: Deploy a new Chainlink sample contract, or, specify a previously deployed Chainlink sample contract\n            </h6>\n            <div className=\"col-sm-3\">\n              <button type=\"button\" className=\"btn btn-success\" \n                      disabled={ this.state.modifyingContract }\n                      onClick={() => this.deployingContract()}>\n                { this.state.modifyingContract ? \"Deploying to blockchain...\" : \"Deploy to blockchain!\" }\n              </button>\n            </div>\n            <small>or</small>\n            {this.editContractPanel()}\n          </div>  : null }\n        </div> : null }\n\n        { this.state.contractAddress ? \n        <div>\n          <h6>\n            The smart contract has been deployed to the following address: \n            <i> {this.state.contractAddress}</i>.\n            <br />\n            {this.editContractPanel()}\n          </h6>\n          <br />\n          <h6>\n            Call a function on the smart contract to ask the Chainlink node to query the current price of ether and return it to us \n            when finished\n          </h6>\n          <div className=\"col-sm-3\">\n            <button type=\"button\" className=\"btn btn-primary\" \n                    disabled={ this.state.requestingEthPrice }\n                    onClick={() => this.requestingEthPrice()}>\n              { this.state.requestingEthPrice ? \"Requesting price of ether via Blockchain...\" : \"Request price of ether via Blockchain\" }\n            </button>\n          </div>\n          <br />\n          { this.state.requestingEthPrice ?\n          <div className=\"row col-sm-12\">\n            <div className=\"col-sm-1\">\n              <div className=\"lds-dual-ring\"></div>\n            </div>            \n            <div className=\"col-sm-10\" style={{marginTop:'9px'}}>\n              waiting for Chainlink to fetch the current ETH price\n            </div>              \n          </div> : null }\n\n          {this.state.priceHistoryCount > 0 ?\n          <div>\n            <hr />\n            <h6>ETH price history (most recently quoted prices appear at top)</h6>\n            <br />\n            <div className=\"row col-sm-12\">\n              <div style={timelinePanel} className=\"col-sm-3\">\n                <Timeline>\n                  {this.renderTimelines()}\n                </Timeline>\n              </div>\n              <div className=\"col-sm-8\">\n                { !this.state.fetchingRecord && this.state.viewRecordId > 0 ?\n                <div>\n                  <div className=\"form-group row\">\n                    <label className=\"col-sm-3 col-form-label\">Record #</label>\n                    <div className=\"col-sm-9\">\n                      <input type=\"text\" readOnly={true} className=\"form-control-plaintext\" value={this.state.viewRecordId}></input>\n                    </div>\n                  </div>\n                  <div className=\"form-group row\">\n                    <label className=\"col-sm-3 col-form-label\">Block timestamp</label>\n                    <div className=\"col-sm-9\">\n                      <input type=\"text\" readOnly={true} className=\"form-control-plaintext\" value={this.state.viewBlockTimestamp}></input>\n                    </div>\n                  </div> \n                  <div className=\"form-group row\">\n                    <label className=\"col-sm-3 col-form-label\">Quoted ETH price</label>\n                    <div className=\"col-sm-9\">\n                      <input style={{fontWeight:'bold'}} type=\"text\" readOnly={true} className=\"form-control-plaintext bold\" value={this.state.viewEthPrice}></input>\n                    </div>\n                  </div>\n                  <div className=\"form-group row\">\n                    <label className=\"col-sm-3 col-form-label\">Block number</label>\n                    <div className=\"col-sm-9\">\n                      <input type=\"text\" readOnly={true} className=\"form-control-plaintext\" value={this.state.viewBlockNumber}></input>\n                    </div>\n                  </div>  \n                </div> : \n                <div>\n                  { this.state.viewJsonMessage }\n                </div> }\n              </div>\n            </div>\n          </div> : null }\n\n        </div> : null }\n      </main>\n    );\n  }\n}\n\nexport default Chainlink;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport Configure from './Configure'\nimport HDwallet from './HDwallet'\nimport IPFS from './IPFS'\nimport OpenLaw from './OpenLaw'\nimport IDregistry from './IDregistry'\nimport AuditLog from './AuditLog'\nimport Chainlink from './Chainlink'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <header className=\"samplesHeader\">\n            <div className=\"row col-sm-12\">\n              <div className=\"col-sm-2\"></div>\n              <div className=\"col-sm-2\">\n                <img src={process.env.PUBLIC_URL + '/imgs/logo.svg'} className=\"mk-logo__title\"></img>\n              </div>\n              <div className=\"col-sm-8\">\n                <Link to=\"/\">\n                  <button className=\"btn btn-link\">CONFIGURE</button>\n                </Link>\n                <Link to=\"/hdwallet\">\n                  <button className=\"btn btn-link\">HDWallet</button>\n                </Link>\n                <Link to=\"/ipfs\">\n                  <button className=\"btn btn-link\">IPFS</button>\n                </Link>\n                {/* <Link to=\"/idregistry\">\n                  <button className=\"btn btn-link\">ID Registry</button>\n                </Link> */}\n                <Link to=\"/openlaw\">\n                  <button className=\"btn btn-link\">OpenLaw</button>\n                </Link>\n                <Link to=\"/auditlog\">\n                  <button className=\"btn btn-link\">Audit Log</button>\n                </Link>\n                <Link to=\"/chainlink\">\n                  <button className=\"btn btn-link\">Chainlink</button>\n                </Link>\n              </div>\n            </div>\n          </header>\n          <div>\n            <Route exact path=\"/\" component={Configure} />\n            <Route exact path=\"/hdwallet\" component={HDwallet} />\n            <Route exact path=\"/ipfs\" component={IPFS} />\n            <Route exact path=\"/idregistry\" component={IDregistry} />\n            <Route exact path=\"/openlaw\" component={OpenLaw} />\n            <Route exact path=\"/auditlog\" component={AuditLog} />\n            <Route exact path=\"/chainlink\" component={Chainlink} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}